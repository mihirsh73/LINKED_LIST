#include <iostream>
using namespace std;
struct Node{
    int data;
    Node* next;
    Node(int x)
    {
        data=x;
        next=NULL;
    }
};
class q{
    private:
    Node* front;
    Node* rear;
    public:
    q()
    {
        front=NULL;
        rear=NULL;
    }
    void insert(int value)
    {
        Node* newnode = new Node(value);
        if(front==NULL)
        {
            front=newnode;
            rear=newnode;
        }
        else{
            rear->next= newnode;
            rear=rear->next;
        }
    }
    int pop()
    {
        if(front==NULL) return -1;
       else if(front==rear)
        {
            Node* t= front;
            front=NULL;
            rear=NULL;
            return t->data;
        }
        else{
            Node* t= front;
            front=front->next;
            return t->data;
        }
    }
};
class s{
    private:
    Node* top;
    public:
    s()
    {
        top=NULL;
    }
    void insert(int value)
    {
        Node* newnode = new Node(value);
        if(top==NULL)
        {
            top=newnode;

        }
        else{
            newnode->next= top;
            top=newnode;
        }
    }
    int pop()
    {
        if(top==NULL)
        {
           return -1;
        }
        else{
            Node* t= top;
            top=top->next;
            return t->data;
        }
    }

};
int main() {
    q obj1;
    obj1.insert(4);
    obj1.insert(3);
     cout<<obj1.pop()<<endl;
    obj1.insert(2);
   
     cout<<obj1.pop()<<endl;
      cout<<obj1.pop()<<endl;
       cout<<obj1.pop()<<endl;
      



    
}
